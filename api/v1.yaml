openapi: '3.0.2'
info:
  title: Vision Line API
  version: '1.0'
servers:
  - url: http://localhost:5000/api/v1/
  
paths:
  /functions:
    get:
      description: Get all possible functions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Function"

  /lines:
    get:
      description: Get current lines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Line"

    post:
      description: Create new line
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Line"        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Line"

  /lines/{lineId}/nodes:
    parameters:
      - $ref: '#/components/parameters/lineId'

    get:
      description: Get nodes for line
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Node"

    post:
      description: Add new node with position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Node"
        description: The new node
      responses:
        '200':
          description: OK
          content:            
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Node"

  /lines/{lineId}/nodes/{nodeId}:
    parameters:
      - $ref: '#/components/parameters/lineId'
      - $ref: '#/components/parameters/nodeId'

    put:
      description: Change the node in nodeId position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Node"
        description: The changed node
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Node"

    delete:
      description: Delete node by nodeId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Node"

  /images/{lineId}:
    parameters:
      - $ref: '#/components/parameters/lineId'

    get:
      description: Get image from line with lineId
      responses:
        '200':
          $ref: '#/components/responses/ImageOkResponse'

  /images/{lineId}/{nodeId}:
    parameters:
      - $ref: '#/components/parameters/lineId'
      - $ref: '#/components/parameters/nodeId'

    get:
      description: Get image from line with lineId before node with nodeId
      responses:
        '200':
          $ref: '#/components/responses/ImageOkResponse'



components:
  schemas:
    FunctionInput:
      type: object
      properties:
        name:
          type: string
        display:
          type: string
        type:
          type: string

    Function:
      type: object
      properties:
        name: 
          type: string
        display:
          type: string
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/FunctionInput"
      example: {name: 'blur', inputs: [{name: 'kernel', type: 'int'}]}

    Node:
      type: object
      properties:
        id:
          type: integer
          description: ID of Node
        name:
          type: string
          description: Name of the implemented function
        position:
          type: integer
          description: Position of node in line
        inputs:
          type: object
          description: Input key-value pairs as object

    Line:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        nodes:
          type: integer
          description: Count of nodes
        lastChange:
          type: number
          description: Epoch of last modification



  responses:
    ImageOkResponse:
      description: OK Image response
      content:
        image/jpeg:
          schema:
            type: string
            format: binary



  parameters:
    lineId:
      name: lineId
      in: query
      required: true
      description: ID of line
      schema:
        type: integer

    nodeId:
      name: nodeId
      in: query
      required: true
      description: ID of node
      schema:
        type: integer
