# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class Line(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, nodes=None, last_change=None):  # noqa: E501
        """Line - a model defined in OpenAPI

        :param id: The id of this Line.  # noqa: E501
        :type id: int
        :param name: The name of this Line.  # noqa: E501
        :type name: str
        :param nodes: The nodes of this Line.  # noqa: E501
        :type nodes: int
        :param last_change: The last_change of this Line.  # noqa: E501
        :type last_change: float
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'nodes': int,
            'last_change': float
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'nodes': 'nodes',
            'last_change': 'lastChange'
        }

        self._id = id
        self._name = name
        self._nodes = nodes
        self._last_change = last_change

    @classmethod
    def from_dict(cls, dikt) -> 'Line':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Line of this Line.  # noqa: E501
        :rtype: Line
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Line.


        :return: The id of this Line.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Line.


        :param id: The id of this Line.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Line.


        :return: The name of this Line.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Line.


        :param name: The name of this Line.
        :type name: str
        """

        self._name = name

    @property
    def nodes(self):
        """Gets the nodes of this Line.

        Count of nodes  # noqa: E501

        :return: The nodes of this Line.
        :rtype: int
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes):
        """Sets the nodes of this Line.

        Count of nodes  # noqa: E501

        :param nodes: The nodes of this Line.
        :type nodes: int
        """

        self._nodes = nodes

    @property
    def last_change(self):
        """Gets the last_change of this Line.

        Epoch of last modification  # noqa: E501

        :return: The last_change of this Line.
        :rtype: float
        """
        return self._last_change

    @last_change.setter
    def last_change(self, last_change):
        """Sets the last_change of this Line.

        Epoch of last modification  # noqa: E501

        :param last_change: The last_change of this Line.
        :type last_change: float
        """

        self._last_change = last_change
